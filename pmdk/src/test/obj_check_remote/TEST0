#!/usr/bin/env bash
# SPDX-License-Identifier: BSD-3-Clause
# Copyright 2019, Intel Corporation

#
# src/test/obj_check_remote/TEST0 -- unit test which checks if remote
# replicas were removed from poolset and were not modified by
# pmemobj_check. (pmemobj_check used to rely on copy on write (MAP_PRIVATE)
# for all replicas but it have never worked for remote ones)
#

. ../unittest/unittest.sh

require_test_type medium
require_command md5sum

setup

require_nodes 2

require_node_libfabric 0 $RPMEM_PROVIDER
require_node_libfabric 1 $RPMEM_PROVIDER

PID_FILE=rpmemd.pid

init_rpmem_on_node 1 0:$PID_FILE

# binary for this test
EXE=obj_check_remote

# define files and directories
TEST_SET_LOCAL="testset_local"
TEST_SET_REMOTE="testset_remote"

# remove files created by previous test
rm_files_from_node 1 ${NODE_DIR[1]}/testfile1
rm_files_from_node 1 ${NODE_DIR[1]}/testfile2
rm_files_from_node 1 ${NODE_DIR[1]}/testfile3
rm_files_from_node 1 ${NODE_DIR[1]}/testfile4
rm_files_from_node 0 ${NODE_DIR[0]}/testfile5
rm_files_from_node 0 ${NODE_DIR[0]}/testfile6

create_poolset $DIR/$TEST_SET_LOCAL 32M:${NODE_DIR[1]}/testfile1:z 32M:${NODE_DIR[1]}/testfile2:z  \
        R 32M:${NODE_DIR[1]}/testfile3:z 32M:${NODE_DIR[1]}/testfile4:z \
	m ${NODE_ADDR[0]}:$TEST_SET_REMOTE

create_poolset $DIR/$TEST_SET_REMOTE 32M:${NODE_DIR[0]}/testfile5:z 32M:${NODE_DIR[0]}/testfile6:z

copy_files_to_node 0 ${NODE_DIR[0]} $DIR/$TEST_SET_REMOTE
copy_files_to_node 1 ${NODE_DIR[1]} $DIR/$TEST_SET_LOCAL

expect_normal_exit run_on_node 1 ../pmempool create obj ${NODE_DIR[1]}/$TEST_SET_LOCAL

expect_abnormal_exit run_on_node 1 ./$EXE$EXESUFFIX ${NODE_DIR[1]}/$TEST_SET_LOCAL abort

# before file copy rpmemd has to finish work
expect_abnormal_exit wait_on_node 0 $PID_FILE

copy_files_from_node 0 $DIR ${NODE_DIR[0]}/testfile5

REPAB=`md5sum -b $DIR/testfile5`

expect_normal_exit run_on_node 1 ./$EXE$EXESUFFIX ${NODE_DIR[1]}/$TEST_SET_LOCAL check

copy_files_from_node 0 $DIR ${NODE_DIR[0]}/testfile5

REPCHECK=`md5sum -b $DIR/testfile5`

if [ "$REPAB" != "$REPCHECK" ]
then
	fatal "$REPAB != $REPCHECK"
fi

check

pass

#!/usr/bin/env bash
# SPDX-License-Identifier: BSD-3-Clause
# Copyright 2018-2019, Intel Corporation

#
# src/test/rpmem_basic/TEST16 -- unit test for rpmem_persist with relaxed flag
# test case for rpmem_persist without relaxed flag is in TEST13
#
# case: invalid offset provided to rpmem_persist()
#

. ../unittest/unittest.sh

require_test_type medium

. setup.sh

setup

LOG=out${UNITTEST_NUM}.log
LOG_TEMP=out${UNITTEST_NUM}_part.log

POOL_SIZE="8M"
[[ $PAGE_SIZE -eq "65536" ]] && POOL_SIZE="128M"

create_poolset $DIR/pool0.set $POOL_SIZE:$PART_DIR/pool0.part0 $POOL_SIZE:$PART_DIR/pool0.part1
create_poolset $DIR/pool1.set $POOL_SIZE:$PART_DIR/pool1.part0 $POOL_SIZE:$PART_DIR/pool1.part1 O SINGLEHDR
create_poolset $DIR/pool2.set $POOL_SIZE:$PART_DIR/pool2.part0 $POOL_SIZE:$PART_DIR/pool2.part1 O NOHDRS

run_on_node 0 "rm -rf ${NODE_DIR[0]}$POOLS_DIR ${NODE_DIR[0]}$POOLS_PART && mkdir -p ${NODE_DIR[0]}$POOLS_DIR && mkdir -p ${NODE_DIR[0]}$POOLS_PART"
copy_files_to_node 0 ${NODE_DIR[0]}$POOLS_DIR $DIR/{pool0.set,pool1.set,pool2.set}

# pool0:
expect_normal_exit run_on_node 1 ./rpmem_basic$EXESUFFIX\
	test_create 0 pool0.set ${NODE_ADDR[0]} mem $POOL_SIZE none\
	test_close 0\
	test_open 0 pool0.set ${NODE_ADDR[0]} pool $POOL_SIZE init none\
	test_persist_header 0 hdr 1\
	test_close 0
run_on_node 1 "cat $LOG >> $LOG_TEMP"

# pool1 (w/ SIGNLEHDR option):
expect_normal_exit run_on_node 1 ./rpmem_basic$EXESUFFIX\
	test_create 0 pool1.set ${NODE_ADDR[0]} mem $POOL_SIZE singlehdr\
	test_close 0\
	test_open 0 pool1.set ${NODE_ADDR[0]} pool $POOL_SIZE init singlehdr\
	test_persist_header 0 hdr 1\
	test_close 0
run_on_node 1 "cat $LOG >> $LOG_TEMP"

# pool2 (w/ NOHDRS option):
expect_normal_exit run_on_node 1 ./rpmem_basic$EXESUFFIX\
	test_create 0 pool2.set ${NODE_ADDR[0]} mem $POOL_SIZE noattr\
	test_close 0\
	test_open 0 pool2.set ${NODE_ADDR[0]} pool $POOL_SIZE init noattr\
	test_persist_header 0 nohdr 1\
	test_close 0
run_on_node 1 "cat $LOG >> $LOG_TEMP"

run_on_node 1 mv $LOG_TEMP $LOG
check
pass

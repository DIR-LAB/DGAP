#!/usr/bin/env bash
# SPDX-License-Identifier: BSD-3-Clause
# Copyright 2016-2019, Intel Corporation

#
# src/test/rpmem_basic/TEST5 -- unit test for rpmemd --remove
#

. ../unittest/unittest.sh

require_test_type medium

require_fs_type any
require_build_type nondebug debug

. setup.sh

setup

LOG=out${UNITTEST_NUM}.log
LOG_TEMP=out${UNITTEST_NUM}_part.log

create_poolset $DIR/pool0.set 8M:$PART_DIR/pool0.part0 8M:$PART_DIR/pool0.part1
# Pool set file with the SINGLEHDR option
create_poolset $DIR/pool1.set 8M:$PART_DIR/pool1.part0 8M:$PART_DIR/pool1.part1 O SINGLEHDR
# Pool set file with the NOHDRS option
create_poolset $DIR/pool2.set 8M:$PART_DIR/pool2.part0 8M:$PART_DIR/pool2.part1 O NOHDRS

expect_normal_exit run_on_node 0 rm -rf $PART_DIR
expect_normal_exit run_on_node 0 mkdir -p ${RPMEM_POOLSET_DIR[0]}
expect_normal_exit run_on_node 0 mkdir -p $PART_DIR
copy_files_to_node 0 ${RPMEM_POOLSET_DIR[0]} $DIR/{pool0.set,pool1.set,pool2.set}

expect_abnormal_exit run_on_node 1 ssh ${NODE_ADDR[0]} "\$RPMEM_CMD --remove pool0.set"
expect_abnormal_exit run_on_node 1 ssh ${NODE_ADDR[0]} "\$RPMEM_CMD --remove pool1.set"
expect_abnormal_exit run_on_node 1 ssh ${NODE_ADDR[0]} "\$RPMEM_CMD --remove pool2.set"

# pool0:

expect_normal_exit run_on_node 1 ./rpmem_basic$EXESUFFIX\
	test_create 0 pool0.set ${NODE_ADDR[0]} mem 8M none test_close 0
expect_normal_exit run_on_node 1 ./rpmem_basic$EXESUFFIX\
	test_open 0 pool0.set ${NODE_ADDR[0]} pool 8M init none\
	test_close 0
expect_normal_exit run_on_node 1 ssh ${NODE_ADDR[0]} "\$RPMEM_CMD --remove pool0.set"
expect_normal_exit run_on_node 1 ./rpmem_basic$EXESUFFIX\
	test_open 0 pool0.set ${NODE_ADDR[0]} pool 8M init none
run_on_node 1 "cat $LOG >> $LOG_TEMP"

# pool1 (w/ SIGNLEHDR option):

expect_normal_exit run_on_node 1 ./rpmem_basic$EXESUFFIX\
	test_create 0 pool1.set ${NODE_ADDR[0]} mem 8M singlehdr test_close 0
expect_normal_exit run_on_node 1 ./rpmem_basic$EXESUFFIX\
	test_open 0 pool1.set ${NODE_ADDR[0]} pool 8M init singlehdr\
	test_close 0
expect_normal_exit run_on_node 1 ssh ${NODE_ADDR[0]} "\$RPMEM_CMD --remove pool1.set"
expect_normal_exit run_on_node 1 ./rpmem_basic$EXESUFFIX\
	test_open 0 pool1.set ${NODE_ADDR[0]} pool 8M init singlehdr
run_on_node 1 "cat $LOG >> $LOG_TEMP"

# pool2 (w/ NOHDRS option):

expect_normal_exit run_on_node 1 ./rpmem_basic$EXESUFFIX\
	test_create 0 pool2.set ${NODE_ADDR[0]} mem 8M noattr test_close 0
expect_normal_exit run_on_node 1 ./rpmem_basic$EXESUFFIX\
	test_open 0 pool2.set ${NODE_ADDR[0]} pool 8M init noattr\
	test_close 0
expect_normal_exit run_on_node 1 ssh ${NODE_ADDR[0]} "\$RPMEM_CMD --remove pool2.set"
expect_normal_exit run_on_node 1 ./rpmem_basic$EXESUFFIX\
	test_open 0 pool2.set ${NODE_ADDR[0]} pool 8M init noattr
run_on_node 1 "cat $LOG >> $LOG_TEMP"

run_on_node 1 mv $LOG_TEMP $LOG
check

pass

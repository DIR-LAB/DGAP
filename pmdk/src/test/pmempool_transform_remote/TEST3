#!/usr/bin/env bash
# SPDX-License-Identifier: BSD-3-Clause
# Copyright 2017-2018, Intel Corporation
#
#
# pmempool_transform_remote/TEST3 -- test for checking pmempool transform;
#                                    adding a second remote replica
#

. ../unittest/unittest.sh

require_test_type	medium
require_fs_type		any

. common.sh

# Create local poolset files
create_poolset $DIR/$POOLSET_LOCAL_IN \
	10M:${NODE_DIR[1]}part00:x \
	10M:${NODE_DIR[1]}part01:x \
	m \
	${NODE_ADDR[0]}:$POOLSET_REMOTE1

create_poolset $DIR/$POOLSET_LOCAL_OUT \
	10M:${NODE_DIR[1]}part00:x \
	10M:${NODE_DIR[1]}part01:x \
	m \
	${NODE_ADDR[0]}:$POOLSET_REMOTE1 \
	m \
	${NODE_ADDR[0]}:$POOLSET_REMOTE2

# Create remote poolset files
create_poolset $DIR/$POOLSET_REMOTE1 \
	20M:${NODE_DIR[0]}remote.1.part0:x

create_poolset $DIR/$POOLSET_REMOTE2 \
	20M:${NODE_DIR[0]}remote.2.part0:x

copy_files_to_node 1 ${NODE_DIR[1]} $DIR/$POOLSET_LOCAL_IN
copy_files_to_node 1 ${NODE_DIR[1]} $DIR/$POOLSET_LOCAL_OUT
copy_files_to_node 0 ${NODE_DIR[0]} $DIR/$POOLSET_REMOTE1
copy_files_to_node 0 ${NODE_DIR[0]} $DIR/$POOLSET_REMOTE2

check_files_on_node 1 $POOLSET_LOCAL_IN $POOLSET_LOCAL_OUT $WRITE_SCRIPT $READ_SCRIPT
check_files_on_node 0 $POOLSET_REMOTE1 $POOLSET_REMOTE2

# Create a pool
expect_normal_exit run_on_node 1 ../pmempool rm -sf ${NODE_DIR[1]}$POOLSET_LOCAL_IN
expect_normal_exit run_on_node 1 ../pmempool rm -sf ${NODE_DIR[1]}$POOLSET_LOCAL_OUT
expect_normal_exit run_on_node 1 ../pmempool create obj ${NODE_DIR[1]}$POOLSET_LOCAL_IN

# Log the first replica structure
dump_info_log 1 ${NODE_DIR[1]}part00 before.00.log
dump_info_log 1 ${NODE_DIR[1]}part01 before.01.log

# Write some data into the pool, hitting two part files
exec_pmemobjcli_script 1 ${NODE_DIR[1]}$WRITE_SCRIPT ${NODE_DIR[1]}$POOLSET_LOCAL_IN /dev/null
exec_pmemobjcli_script 1 ${NODE_DIR[1]}$READ_SCRIPT ${NODE_DIR[1]}$POOLSET_LOCAL_IN before.data.log

# Transform poolset
expect_normal_exit run_on_node 1 ../pmempool transform \
	${NODE_DIR[1]}$POOLSET_LOCAL_IN ${NODE_DIR[1]}$POOLSET_LOCAL_OUT

# Check if correctly copied
exec_pmemobjcli_script 1 ${NODE_DIR[1]}$READ_SCRIPT ${NODE_DIR[1]}$POOLSET_LOCAL_OUT after.data.log

# Log the first replica structure
dump_info_log 1 ${NODE_DIR[1]}part00 after.00.log
dump_info_log 1 ${NODE_DIR[1]}part01 after.01.log

# Compare the logs
diff_log 1 before.00.log after.00.log
diff_log 1 before.01.log after.01.log
diff_log 1 before.data.log after.data.log

pass
